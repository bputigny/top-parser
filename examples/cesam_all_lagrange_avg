<<<<<<< HEAD
=======
input int lres
>>>>>>> 3abd966... Add 2 cesam examples
input int lmax
input double mass
input double Rota
input double age
<<<<<<< HEAD
=======
input int orderFD
>>>>>>> 3abd966... Add 2 cesam examples
# input modelfile a256
input string gridfile
input int pert_model
input string grid_type
input double C0
input double C1
input double C2
input double C3

var dP_P, (Er, Et, Ep), Phi, PhiP, Phie, PhieP

field zeta, r_map, roz, cott, re_map, re_t, re_tt, re_z, r_z, rrt, sint, pm,
    rhom, pe_z, grd_pe_z, grd_pe_zz, grd_pe_t, grd_pe_zt, r_t, cost, pe_t,
    grd_pe_tz, grd_pe_tt, r_zt, r_zz, r_tt, rhom_z, rhom_t, re_zt, re_zz
scalar K, Gamma1, Lambda

# suppress PhiP PhieP

leq(eqEr)    = abs(m)+iparity
leq(eqEt)    = abs(m)+iparity
leq(eqdP_P)  = abs(m)+iparity
leq(eqPhi)   = abs(m)+iparity
leq(eqPhiP)  = abs(m)+iparity
leq(eqPhie)  = abs(m)+iparity
leq(eqPhieP) = abs(m)+iparity
leq(eqEp)    = abs(m)+1-iparity

in

#-------------------------------------------------------------------------------------
#instruction lmax = maxval(lvar)
# instruction call initialisation(nt,nr,m,lres,llmax) # this initialises the integrales module
# instruction call init_avg(dmat(1)%derive(:,:,0),dmat(1)%lbder(0),dmat(1)%ubder(0))
#-------------------------------------------------------------------------------------
equation eqdP_P:

0 = 
    Illm_a(r_map*roz*r_z/Gamma1)    * dP_P +
    Illm_a(zeta)                    * Er' +
    2.0                             * Er -
    l*(l+1)                         * Et
with (r=1)
    dr(Er, -1) = l * dr(Et, -1) at r = 0
#-------------------------------------------------------------------------------------
equation eqEr:

0 =
    fp^2 * Illm_a(r_z/roz^2)               * Er +
    fp^1 * Illm_a(2.0*m*Rota*r_z/roz^2)    * Er +
           Illm_a(m^2*Rota^2*r_z/roz^2)  * Er +
    fp^2 * Jllm_a(rrt/roz)                  * Et +
    fp^1 * Jllm_a(2.0*m*Rota*rrt/roz)       * Et +
           Jllm_a(m^2*Rota^2*rrt/roz)     * Et +
    fp^2 * Kllm_a(rrt/roz)                  * Ep +
    fp^1 * Kllm_a(2.0*m*Rota*rrt/roz)       * Ep +
           Kllm_a(m^2*Rota^2*rrt/roz)     * Ep +
    fp^1 * Kllm_a(-2.0*Rota*sint/roz)       * Et +
           Kllm_a(-2.0*m*Rota^2*sint/roz)  * Et +
    fp^1 * Jllm_a(-2.0*Rota*sint/roz)       * Ep +
           Jllm_a(-2.0*m*Rota^2*sint/roz)  * Ep +
           Illm_a(-pm/rhom)                 * dP_P' +
           Illm_a(pe_z*(1.0-1.0/Gamma1))    * dP_P -
    1.0                                     * PhiP +
    Illm_a(-grd_pe_z)                       *  Er' +
    Illm(-grd_pe_zz)                        *  Er + # this is NOT a mistake
    Jllm_a(-grd_pe_t)                       *  Et' +
    Jllm(-grd_pe_zt)                        *  Et + # this is NOT a mistake
    Kllm_a(-grd_pe_t)                       *  Ep' +
    Kllm(-grd_pe_zt)                        *  Ep  # this is NOT a mistake
# This corresponds to delta p/P_0 = 0 on stellar surface:
with (r=1)
    dr(dP_P, -1) = 0 at r = 1
#-------------------------------------------------------------------------------------
equation eqEt:

0 =
    fp^2 * Jllmc(r_t/roz^2)                                    * dr(Er, -1) +
    fp^1 * Jllmc(2.0*m*Rota*r_t/roz^2)                         * dr(Er, -1) +
           Jllmc(m^2*Rota^2*r_t/roz^2)                         * dr(Er, -1) +
    fp^2 * Lllm((r_map+rrt*r_t)/(roz*r_z))                     * dr(Et, -1) +
    # instruction call modify_l0($prev,abs(m)+iparity)                    )
    fp^1 * Lllm(2.0*m*Rota*(r_map+rrt*r_t)/(roz*r_z))          * dr(Et, -1) +
           Lllm(m^2*Rota^2*(r_map+rrt*r_t)/(roz*r_z))          * dr(Et, -1) +
    fp^2 * Nllm(zeta/r_z)                                      * dr(Et, -1) +
    fp   * Nllm(2.0*m*Rota*zeta/r_z)                           * dr(Et, -1) +
           Nllm(m^2*Rota^2*zeta/r_z)                           * dr(Et, -1) +
    fp^2 * Mllm((r_map+rrt*r_t)/(roz*r_z))                     * dr(Ep, -1) +
    fp^1 * Mllm(2.0*m*Rota*(r_map+rrt*r_t)/(roz*r_z))          * dr(Ep, -1) +
           Mllm(m^2*Rota^2*(r_map+rrt*r_t)/(roz*r_z))          * dr(Ep, -1) +
    fp^2 * Mllmc(-zeta/r_z)                                    * dr(Ep, -1) +
    fp^1 * Mllmc(-2.0*m*Rota*zeta/r_z)                         * dr(Ep, -1) +
           Mllmc(-m^2*Rota^2*zeta/r_z)                         * dr(Ep, -1) +
    fp^1 * Kllmc(2.0*Rota*zeta*sint/roz)                       * dr(Er, -1) +
           Kllmc(2.0*m*Rota^2*zeta*sint/roz)                   * dr(Er, -1) +
    fp^1 * Mllm(-2.0*Rota*(r_t*sint+r_map*cost)/(roz*r_z))     * dr(Et, -1) +
    fp^1 * Mllmc(2.0*Rota*(r_t*sint+r_map*cost)/(roz*r_z))     * dr(Et, -1) +
           Mllm(-2.0*m*Rota^2*(r_t*sint+r_map*cost)/(roz*r_z)) * dr(Et, -1) +
           Mllmc(2.0*m*Rota^2*(r_t*sint+r_map*cost)/(roz*r_z)) * dr(Et, -1) +
    fp^1 * Lllm(-2.0*Rota*(r_t*sint+r_map*cost)/(roz*r_z))     * dr(Ep, -1) +
    fp^1 * Nllm(-2.0*Rota*(r_t*sint+r_map*cost)/(roz*r_z))     * dr(Ep, -1) +
           Lllm(-2.0*m*Rota^2*(r_t*sint+r_map*cost)/(roz*r_z)) * dr(Ep, -1) +
           Nllm(-2.0*m*Rota^2*(r_t*sint+r_map*cost)/(roz*r_z)) * dr(Ep, -1) +
           Lllm(-pm/rhom)                                      * dr(dP_P, -1) +
           Nllm(-pm/rhom)                                      * dr(dP_P, -1) +
           Jllmc(pe_t*(1.0-1.0/Gamma1))                        * dr(dP_P, -1) -
           l*(l+1)                                             * dr(Phi, -1) +
           Jllmc(-grd_pe_tz)                                   * dr(Er, -1) +
           Lllm(-grd_pe_tt)                                    * dr(Et, -1) +
           Mllm(-grd_pe_tt)                                    * dr(Ep, -1) +
           Lllm(-grd_pe_z)                                     * dr(Er, -1) +
           Nllm(-grd_pe_z)                                     * dr(Er, -1) +
           Tllm(-grd_pe_t)                                     * dr(Et, -1) +
           Mllmc(dble(m)*grd_pe_t/sint)                        * dr(Et, -1) +
           Ullm(-grd_pe_t)                                     * dr(Ep, -1) +
           Nllm(-dble(m)*grd_pe_t/sint)                        * dr(Ep, -1)

#-------------------------------------------------------------------------------------
equation eqEp:

0 =
    fp^2 * Kllmc(r_t/roz^2)                                    * dr(Er, -1) +
    fp^1 * Kllmc(2.0*m*Rota*r_t/roz^2)                         * dr(Er, -1) +
           Kllmc(m^2*Rota^2*r_t/roz^2)                         * dr(Er, -1) +
    fp^2 * Mllmc((r_map+rrt*r_t)/(roz*r_z))                    * dr(Et, -1) +
    fp^1 * Mllmc(2.0*m*Rota*(r_map+rrt*r_t)/(roz*r_z))         * dr(Et, -1) +
           Mllmc(m^2*Rota^2*(r_map+rrt*r_t)/(roz*r_z))         * dr(Et, -1) +
    fp^2 * Mllm(-zeta/r_z)                                     * dr(Et, -1) +
    fp^1 * Mllm(-2.0*m*Rota*zeta/r_z)                          * dr(Et, -1) +
           Mllm(-m^2*Rota^2*zeta/r_z)                          * dr(Et, -1) +
    fp^2 * Nllm(-(r_map+rrt*r_t)/(roz*r_z))                    * dr(Ep, -1) +
    fp^1 * Nllm(-2.0*m*Rota*(r_map+rrt*r_t)/(roz*r_z))         * dr(Ep, -1) +
           Nllm(-m^2*Rota^2*(r_map+rrt*r_t)/(roz*r_z))         * dr(Ep, -1) +
    fp^2 * Lllm(-zeta/r_z)                                     * dr(Ep, -1) +
# instruction call modify_l0($prev,abs(m)+modulo(1+iparity,2)) 
    fp^1 * Lllm(-2.0*m*Rota*zeta/r_z)                           * dr(Ep, -1) +
           Lllm(-m^2*Rota^2*zeta/r_z)                           * dr(Ep, -1) +
    fp^1 * Jllmc(2.0*Rota*zeta*sint/roz)                        * dr(Er, -1) +
           Jllmc(2.0*m*Rota^2*zeta*sint/roz)                    * dr(Er, -1) +
    fp^1 * Lllm(2.0*Rota*(r_t*sint+r_map*cost)/(roz*r_z))       * dr(Et, -1) +
           Lllm(2.0*m*Rota^2*(r_t*sint+r_map*cost)/(roz*r_z))   * dr(Et, -1) +
    fp^1 * Nllm(2.0*Rota*(r_t*sint+r_map*cost)/(roz*r_z))       * dr(Et, -1) +
           Nllm(2.0*m*Rota^2*(r_t*sint+r_map*cost)/(roz*r_z))   * dr(Et, -1) +
    fp^1 * Mllm(2.0*Rota*(r_t*sint+r_map*cost)/(roz*r_z))       * dr(Ep, -1) +
           Mllm(2.0*m*Rota^2*(r_t*sint+r_map*cost)/(roz*r_z))   * dr(Ep, -1) +
    fp^1 * Mllmc(-2.0*Rota*(r_t*sint+r_map*cost)/(roz*r_z))     * dr(Ep, -1) +
           Mllmc(-2.0*m*Rota^2*(r_t*sint+r_map*cost)/(roz*r_z)) * dr(Ep, -1) +
           Mllm(pm/rhom)                                        * dr(dP_P, -1) +
           Mllmc(-pm/rhom)                                      * dr(dP_P, -1) +
           Kllmc(pe_t*(1.0-1.0/Gamma1))                         * dr(dP_P, -1) +
           Kllmc(-grd_pe_tz)                                    * dr(Er, -1) +
           Mllmc(-grd_pe_tt)                                    * dr(Et, -1) +
           Nllm(grd_pe_tt)                                      * dr(Ep, -1) +
           Mllm(grd_pe_z)                                       * dr(Er, -1) +
           Mllmc(-grd_pe_z)                                     * dr(Er, -1) +
           Xllm(-grd_pe_t)                                      * dr(Et, -1) +
           Lllm(dble(m)*grd_pe_t/sint)                          * dr(Et, -1) +
           Yllm(grd_pe_t)                                       * dr(Ep, -1) +
           Mllm(dble(m)*grd_pe_t/sint)                          * dr(Ep, -1)
with (r=0)
    dr(Ep, -1) = 0 at r = 0

#-------------------------------------------------------------------------------------
equation eqPhi:

PhiP = Phi'
with (r=1)
    l*dr(Phi, -1) + max(0, 1-l) * dr(PhiP, -1) = 0 at r = 0
# termbc t nr w0 dble($lvar($j1))            Phi^-1(1)
# termbc t nr w0 dble(max(0,1-$lvar($j1)))   PhiP^-1(1)
#-------------------------------------------------------------------------------------
equation eqPhiP:

0 = 
    Illm_a((r_map^2+r_t^2)/r_z^2)   * PhiP' +
    Illm_a((2.0*r_z*r_t*r_zt-r_map^2*r_zz-r_z^2*r_tt+2.0*r_map*r_z^2-r_t^2*r_zz-r_z^2*r_t*cott)/r_z^3) * PhiP +
    Jllm_a(-2.0*r_t/r_z)                    * PhiP -
    l*(l+1)                                 * Phi +
    Illm_a(-Lambda*(r_map^2*rhom)/Gamma1)   * dP_P +
    Illm(Lambda*(zeta^2*rhom_z/r_z))        * Er +
    Jllm(Lambda*(zeta*rhom_t/r_z))          * Et +
    Kllm(Lambda*(zeta*rhom_t/r_z))          * Ep
with (r=1)
    dr(Phi, -1) = dr(Phie, -1) at r = 1

#-------------------------------------------------------------------------------------
equation eqPhie:

Phie' = PhieP
with (r=1)
0 = 
    dr(PhiP, -1) +
    dr(PhieP, -1) +
    Illm(Lambda*rhom*zeta^2*r_z/(r_map^2+r_t^2)) * dr(Er, -1)
    at r = 1
#-------------------------------------------------------------------------------------
equation eqPhieP:

0 =
    Illm_a((re_map^2+re_t^2)/re_z^2) * PhieP' +
    Illm_a((2.0*re_z*re_t*re_zt-re_map^2*re_zz-re_z^2*re_tt+2.0*re_map*re_z^2-re_t^2*re_zz-re_z^2*re_t*cott)/re_z^3) * PhieP +
    Jllm_a(-2.0*re_t/re_z)          * PhieP -
    l*(l+1)                         * Phie
with (r=1)
    1.0/K   * dr(PhieP, -1) = (l+1)/2.0 * dr(Phie, -1)
at r = 0
#-------------------------------------------------------------------------------------
